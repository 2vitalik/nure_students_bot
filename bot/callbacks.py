import re
from datetime import datetime

import shared_utils.api.telegram.telegram_utils as tg
from shared_utils.api.coda.v2.doc import CodaDoc
from shared_utils.io.json import json_dump

import conf
from bot.commands.register import register_message, register_buttons
from bot.utils.errors import errors
from bot.utils.tg_utils import tg_send


def save_callback_json(query, callback_type):
    now = datetime.now()
    month, dt = now.strftime('%Y-%m'), now.strftime('%Y-%m-%d %H-%M-%S')
    filename = f'{conf.data_path}/callbacks/{callback_type}/{month}/' \
               f'{dt} - {query.id}.json'
    json_dump(filename, query.to_dict())


@errors('callbacks')
def callbacks(update, context):
    bot = context.bot
    query = update.callback_query

    if query.data.startswith('register:'):
        save_callback_json(query, 'register')
        callback_register(bot, query)

    else:
        save_callback_json(query, 'unknown')


def coda_register(username, user_id):
    if not username:
        return False, False

    doc = CodaDoc('d1GDyxjRqoL', coda_token=conf.coda_token,
                  conf_path=f'{conf.data_path}/coda_conf')
    students = doc.Students.all()

    registered = already_registered = False
    for row in students:
        if row['tg_username'] == f'@{username}':
            if row['tg_id']:
                already_registered = True
                break
            doc.Students.update(row['@id'], {'tg_id': user_id})
            registered = True
            break

    return registered, already_registered


def callback_register(bot, query):
    chat = query.message.chat
    user = query.from_user

    cmd, user_id, username = query.data[len('register:'):].split('|')
    data = '|'.join((user_id, username))

    text = query.message.text_html

    m = re.search(r'<b>Input:</b> (.*)', text)
    if m:
        user_named = m.group(1)
    else:
        tg_send(bot, conf.telegram_error,
                f'‚õîÔ∏è –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–Ω–∞–π—Ç–∏ "Input" —É –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—ñ')
        return

    m = re.search(r'<b>Full:</b> (.*)', text)
    if m:
        full_name = m.group(1)
    else:
        tg_send(bot, conf.telegram_error,
                f'‚õîÔ∏è –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–Ω–∞–π—Ç–∏ "Full" —É –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—ñ')
        return

    if cmd == 'process':
        registered, already_registered = coda_register(username, user_id)

        if already_registered:
            icon, title, hidden = '‚ùé', '–í–∂–µ –±—É–≤ –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω —Ä–∞–Ω—ñ—à–µ', True
            tg_send(bot, user_id,
                    "‚ùé –ó–¥–∞—î—Ç—å—Å—è, –≤–∏ –≤–∂–µ –±—É–ª–∏ –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω—ñ —Ä–∞–Ω—ñ—à–µ!\n"
                    "–ú–æ–∂–ª–∏–≤–æ, –≤–∏ –≤—ñ–¥–ø—Ä–∞–≤–∏–ª–∏ –∑–∞–ø–∏—Ç –ø–æ–≤—Ç–æ—Ä–Ω–æ\n\n"
                    "–Ø–∫—â–æ —Ü–µ –Ω–µ —Ç–∞–∫, —Ç–æ–¥—ñ –∑–≤ º—è–∂—ñ—Ç—å—Å—è, –±—É–¥—å –ª–∞—Å–∫–∞, "
                    "–∑ –≤–∏–∫–ª–∞–¥–∞—á–µ–º: @vitaliy_lyapota")

        elif registered:
            icon, title, hidden = '‚úÖ', '–ó–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ', True
            tg_send(bot, user_id,
                    "‚úÖ –î—è–∫—É—é, –í–∏ –±—É–ª–∏ —É—Å–ø—ñ—à–Ω–æ –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω—ñ :)")

        else:
            icon, title, hidden = '‚õîÔ∏è', '–ù–µ –≤–¥–∞–ª–æ—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ', False
            tg_send(bot, conf.telegram_error,
                    f'‚õîÔ∏è –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–Ω–∞–π—Ç–∏: @{username}')

    elif cmd == 'manually':
        icon, title, hidden = '‚úÖ', '–ó–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–æ –≤–ª–∞—Å–Ω–æ—Ä—É—á', True
        tg_send(bot, user_id,
                "‚úÖ –î—è–∫—É—é, –í–∏ –±—É–ª–∏ —É—Å–ø—ñ—à–Ω–æ –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω—ñ!")

    elif cmd == 'duplicated':
        icon, title, hidden = '‚ùé', '–¶–µ –ø–æ–≤—Ç–æ—Ä', True
        tg_send(bot, user_id,
                "‚ùé –ó–¥–∞—î—Ç—å—Å—è, –≤–∏ –≤–∂–µ –±—É–ª–∏ –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω—ñ —Ä–∞–Ω—ñ—à–µ\n"
                "–ú–æ–∂–ª–∏–≤–æ, –≤–∏ –≤—ñ–¥–ø—Ä–∞–≤–∏–ª–∏ –∑–∞–ø–∏—Ç –ø–æ–≤—Ç–æ—Ä–Ω–æ\n\n"
                "–Ø–∫—â–æ —Ü–µ –Ω–µ —Ç–∞–∫, —Ç–æ–¥—ñ –∑–≤ º—è–∂—ñ—Ç—å—Å—è, –±—É–¥—å –ª–∞—Å–∫–∞, "
                "–∑ –≤–∏–∫–ª–∞–¥–∞—á–µ–º: @vitaliy_lyapota")

    elif cmd == 'already':
        icon, title, hidden = '‚úÖ', '–í–∂–µ –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–æ', True

    elif cmd == 'hide':
        icon, title, hidden = '‚úîÔ∏è', '–ü—Ä–∏—Ö–æ–≤–∞–Ω–æ', True

    elif cmd == 'show':
        icon, title, hidden = 'üîÜ', '–ó–Ω–æ–≤—É –ø–æ–∫–∞–∑–∞–Ω–æ', False

    else:
        tg_send(bot, conf.telegram_error,
                "Register callback has wrong command information\n"
                f"Query Data: {query.data}")
        return

    text = register_message(icon, title,
                            user_id, username, user_named, full_name)

    tg.callback(query, text, register_buttons(data, hidden=hidden))
